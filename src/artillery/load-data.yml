config:
  target: 'https://scc24appnortheurope4204.azurewebsites.net/rest'
  plugins:
    metrics-by-endpoint:
      useOnlyRequestNames: true
  processor: "./test-utils.js"
  variables:
     metricsProcessEndpoint : "myProcessEndpoint"  # function used to aggregate endpoints for statistics
  phases:
  - name: "Create users"    # Create users
    duration: 1
    arrivalCount: 1

scenarios:
  - name: 'Create users'
    weight: 1
    flow:
      - loop:                            # let's create 950 users - loop ... count
        - function: "genNewUser"         # Generate the needed information for the user
        - post:
            url: "/user"
            headers:
              Content-Type: multipart/form-data"
              Accept: application/json
            beforeRequest: "uploadImageBody"
            formData:
              - name: "user"
                type: "text"
                value: '{"id": "{{ userid }}", "name": "{{ name }}", "pwd": "{{ pwd }}"}'
              - name: "image"
                type: "file"
                file: ""
            afterResponse: "genNewUserReply"    # capture result and store in file
        count: 250
      - loop:                            # let's create 50 users - loop ... count
        - post:                          # First: post image for the user
        - function: "genNewUser"         # Generate the needed information for the user
        - post:
            url: "/user"
            headers:
              Content-Type: multipart/form-data"
              Accept: application/json
            beforeRequest: "uploadImageBody"
            formData:
              - name: "user"
                type: "text"
                value: '{"id": "{{ userid }}", "name": "{{ name }}", "pwd": "{{ pwd }}"}'
              - name: "image"
                type: "file"
                file: ""
            afterResponse: "genNewUserReply"    # capture result and store in file
        - post:
            url: "/user/auth"
            headers:
              Content-Type: application/json
            json:
              user: "{{ userid }}"
              pwd: "{{ pwd }}"
        - loop:                            # let's create 50 users - loop ... count
          - function: "genNewHouse"         # Generate the needed information for the user
          - post:
              url: "/house"
              headers:
                Content-Type: multipart/form-data"
                Accept: application/json
              beforeRequest: "uploadImageBody"
              formData:
                - name: "user"
                  type: "text"
                  value: '{"name": "{{ name }}", "location": "{{ location }}", "description": "{{ description }}", "owner": "{{ userid }}"}'
                - name: "image"
                  type: "file"
                  file: ""
              capture:
                json: "$.id"
                as: "houseid"              # capture the house id to be used in house creation
          - post:                          # make this house available
              url: "/house/{{ houseid }}/available"
              headers:
                Content-Type: application/json
                Accept: application/json
              json:
                fromDate: "12-2023"
                toDate: "12-2024"
                cost: "{{ cost }}"
                discount: "{{ discount }}"
          whileTrue: "random90"
        count: 250

